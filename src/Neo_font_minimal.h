#include <avr/pgmspace.h>

#if (ARDUINO >= 100)
#include <Arduino.h>
#else
#include <WProgram.h>
#endif

PROGMEM const byte CH[] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ' '
  0x00, 0x18, 0x00, 0x18, 0x18, 0x3c, 0x3c, 0x18, // '!'
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x36, // '"'
  0x00, 0x36, 0x36, 0x7f, 0x36, 0x7f, 0x36, 0x36, // '#'
  0x00, 0x0c, 0x1f, 0x30, 0x1e, 0x03, 0x3e, 0x0c, // '$'
  0x00, 0x63, 0x66, 0x0c, 0x18, 0x33, 0x63, 0x00, // '%'
  0x00, 0x6e, 0x33, 0x3b, 0x6e, 0x1c, 0x36, 0x1c, // '&'
  0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x06, 0x06, // '''
  0x00, 0x18, 0x0c, 0x06, 0x06, 0x06, 0x0c, 0x18, // '('
  0x00, 0x06, 0x0c, 0x18, 0x18, 0x18, 0x0c, 0x06, // ')'
  0x00, 0x00, 0x66, 0x3c, 0xff, 0x3c, 0x66, 0x00, // '*'
  0x00, 0x00, 0x0c, 0x0c, 0x3f, 0x0c, 0x0c, 0x00, // '+'
  0x06, 0x0c, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, // ','
  0x00, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, // '-'
  0x00, 0x0c, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, // '.'
  0x00, 0x01, 0x03, 0x06, 0x0c, 0x18, 0x30, 0x60, // '/'
  0x00, 0x3e, 0x67, 0x6f, 0x7b, 0x73, 0x63, 0x3e, // '0'
  0x00, 0x3f, 0x0c, 0x0c, 0x0c, 0x0c, 0x0e, 0x0c, // '1'
  0x00, 0x3f, 0x33, 0x06, 0x1c, 0x30, 0x33, 0x1e, // '2'
  0x00, 0x1e, 0x33, 0x30, 0x1c, 0x30, 0x33, 0x1e, // '3'
  0x00, 0x78, 0x30, 0x7f, 0x33, 0x36, 0x3c, 0x38, // '4'
  0x00, 0x1e, 0x33, 0x30, 0x30, 0x1f, 0x03, 0x3f, // '5'
  0x00, 0x1e, 0x33, 0x33, 0x1f, 0x03, 0x06, 0x1c, // '6'
  0x00, 0x0c, 0x0c, 0x0c, 0x18, 0x30, 0x33, 0x3f, // '7'
  0x00, 0x1e, 0x33, 0x33, 0x1e, 0x33, 0x33, 0x1e, // '8'
  0x00, 0x0e, 0x18, 0x30, 0x3e, 0x33, 0x33, 0x1e, // '9'
  0x00, 0x0c, 0x0c, 0x00, 0x00, 0x0c, 0x0c, 0x00, // ':'
  0x06, 0x0c, 0x0c, 0x00, 0x00, 0x0c, 0x0c, 0x00, // ';'
  0x00, 0x18, 0x0c, 0x06, 0x03, 0x06, 0x0c, 0x18, // '<'
  0x00, 0x00, 0x3f, 0x00, 0x00, 0x3f, 0x00, 0x00, // '='
  0x00, 0x06, 0x0c, 0x18, 0x30, 0x18, 0x0c, 0x06, // '>'
  0x00, 0x0c, 0x00, 0x0c, 0x18, 0x30, 0x33, 0x1e, // '?'
  0x00, 0x1e, 0x03, 0x7b, 0x7b, 0x7b, 0x63, 0x3e, // '@'
  0x00, 0x33, 0x33, 0x3f, 0x33, 0x33, 0x1e, 0x0c, // 'A'
  0x00, 0x3f, 0x66, 0x66, 0x3e, 0x66, 0x66, 0x3f, // 'B'
  0x00, 0x3c, 0x66, 0x03, 0x03, 0x03, 0x66, 0x3c, // 'C'
  0x00, 0x1f, 0x36, 0x66, 0x66, 0x66, 0x36, 0x1f, // 'D'
  0x00, 0x7f, 0x46, 0x16, 0x1e, 0x16, 0x46, 0x7f, // 'E'
  0x00, 0x0f, 0x06, 0x16, 0x1e, 0x16, 0x46, 0x7f, // 'F'
  0x00, 0x7c, 0x66, 0x73, 0x03, 0x03, 0x66, 0x3c, // 'G'
  0x00, 0x33, 0x33, 0x33, 0x3f, 0x33, 0x33, 0x33, // 'H'
  0x00, 0x1e, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x1e, // 'I'
  0x00, 0x1e, 0x33, 0x33, 0x30, 0x30, 0x30, 0x78, // 'J'
  0x00, 0x67, 0x66, 0x36, 0x1e, 0x36, 0x66, 0x67, // 'K'
  0x00, 0x7f, 0x66, 0x46, 0x06, 0x06, 0x06, 0x0f, // 'L'
  0x00, 0x63, 0x63, 0x6b, 0x7f, 0x7f, 0x77, 0x63, // 'M'
  0x00, 0x63, 0x63, 0x73, 0x7b, 0x6f, 0x67, 0x63, // 'N'
  0x00, 0x1c, 0x36, 0x63, 0x63, 0x63, 0x36, 0x1c, // 'O'
  0x00, 0x0f, 0x06, 0x06, 0x3e, 0x66, 0x66, 0x3f, // 'P'
  0x00, 0x38, 0x1e, 0x3b, 0x33, 0x33, 0x33, 0x1e, // 'Q'
  0x00, 0x67, 0x66, 0x36, 0x3e, 0x66, 0x66, 0x3f, // 'R'
  0x00, 0x1e, 0x33, 0x38, 0x0e, 0x07, 0x33, 0x1e, // 'S'
  0x00, 0x1e, 0x0c, 0x0c, 0x0c, 0x0c, 0x2d, 0x3f, // 'T'
  0x00, 0x3f, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, // 'U'
  0x00, 0x0c, 0x1e, 0x33, 0x33, 0x33, 0x33, 0x33, // 'V'
  0x00, 0x63, 0x77, 0x7f, 0x6b, 0x63, 0x63, 0x63, // 'W'
  0x00, 0x63, 0x36, 0x1c, 0x1c, 0x36, 0x63, 0x63, // 'X'
  0x00, 0x1e, 0x0c, 0x0c, 0x1e, 0x33, 0x33, 0x33, // 'Y'
  0x00, 0x7f, 0x66, 0x4c, 0x18, 0x31, 0x63, 0x7f, // 'Z'
  0x00, 0x1e, 0x06, 0x06, 0x06, 0x06, 0x06, 0x1e, // '['
  0x00, 0x40, 0x60, 0x30, 0x18, 0x0c, 0x06, 0x03, // backslash
  0x00, 0x1e, 0x18, 0x18, 0x18, 0x18, 0x18, 0x1e, // ']'
  0x00, 0x00, 0x00, 0x00, 0x63, 0x36, 0x1c, 0x08, // '^'
  0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // '_'
  0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x0c, 0x0c, // '`'
  0x00, 0x6e, 0x33, 0x3e, 0x30, 0x1e, 0x00, 0x00, // 'a'
  0x00, 0x3b, 0x66, 0x66, 0x3e, 0x06, 0x06, 0x07, // 'b'
  0x00, 0x1e, 0x33, 0x03, 0x33, 0x1e, 0x00, 0x00, // 'c'
  0x00, 0x6e, 0x33, 0x33, 0x3e, 0x30, 0x30, 0x38, // 'd'
  0x00, 0x1e, 0x03, 0x3f, 0x33, 0x1e, 0x00, 0x00, // 'e'
  0x00, 0x0f, 0x06, 0x06, 0x0f, 0x06, 0x36, 0x1c, // 'f'
  0x1f, 0x30, 0x3e, 0x33, 0x33, 0x6e, 0x00, 0x00, // 'g'
  0x00, 0x67, 0x66, 0x66, 0x6e, 0x36, 0x06, 0x07, // 'h'
  0x00, 0x1e, 0x0c, 0x0c, 0x0c, 0x0e, 0x00, 0x0c, // 'i'
  0x1e, 0x33, 0x33, 0x30, 0x30, 0x30, 0x00, 0x30, // 'j'
  0x00, 0x67, 0x36, 0x1e, 0x36, 0x66, 0x06, 0x07, // 'k'
  0x00, 0x1e, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x0e, // 'l'
  0x00, 0x63, 0x6b, 0x7f, 0x7f, 0x33, 0x00, 0x00, // 'm'
  0x00, 0x33, 0x33, 0x33, 0x33, 0x1f, 0x00, 0x00, // 'n'
  0x00, 0x1e, 0x33, 0x33, 0x33, 0x1e, 0x00, 0x00, // 'o'
  0x0f, 0x06, 0x3e, 0x66, 0x66, 0x3b, 0x00, 0x00, // 'p'
  0x78, 0x30, 0x3e, 0x33, 0x33, 0x6e, 0x00, 0x00, // 'q'
  0x00, 0x0f, 0x06, 0x66, 0x6e, 0x3b, 0x00, 0x00, // 'r'
  0x00, 0x1f, 0x30, 0x1e, 0x03, 0x3e, 0x00, 0x00, // 's'
  0x00, 0x18, 0x2c, 0x0c, 0x0c, 0x3e, 0x0c, 0x08, // 't'
  0x00, 0x6e, 0x33, 0x33, 0x33, 0x33, 0x00, 0x00, // 'u'
  0x00, 0x0c, 0x1e, 0x33, 0x33, 0x33, 0x00, 0x00, // 'v'
  0x00, 0x36, 0x7f, 0x7f, 0x6b, 0x63, 0x00, 0x00, // 'w'
  0x00, 0x63, 0x36, 0x1c, 0x36, 0x63, 0x00, 0x00, // 'x'
  0x1f, 0x30, 0x3e, 0x33, 0x33, 0x33, 0x00, 0x00, // 'y'
  0x00, 0x3f, 0x26, 0x0c, 0x19, 0x3f, 0x00, 0x00, // 'z'
  0x00, 0x38, 0x0c, 0x0c, 0x07, 0x0c, 0x0c, 0x38, // '{'
  0x00, 0x18, 0x18, 0x18, 0x00, 0x18, 0x18, 0x18, // '|'
  0x00, 0x07, 0x0c, 0x0c, 0x38, 0x0c, 0x0c, 0x07, // '}'
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3b, 0x6e, // '~'
};